---
# Role: nvchad
# Installs Neovim (via Homebrew), NVChad, and applies user config overrides.

- name: Ensure Neovim is installed
  ansible.builtin.command: brew install neovim
  register: nvim_install
  changed_when: "'Installing' in (nvim_install.stdout | default('')) or nvim_install.rc == 0"
  failed_when: false

- name: Gather $HOME
  ansible.builtin.setup:
    gather_subset:
      - env

- name: Ensure Neovim config directory exists
  ansible.builtin.file:
    path: "{{ ansible_env.HOME }}/.config/nvim"
    state: directory
    mode: "0755"

- name: Check if NVChad is already installed (init.lua)
  ansible.builtin.stat:
    path: "{{ ansible_env.HOME }}/.config/nvim/init.lua"
  register: nvim_init

- name: Check if NVChad repo exists (.git)
  ansible.builtin.stat:
    path: "{{ ansible_env.HOME }}/.config/nvim/.git"
  register: nvim_git

- name: Remove stale ~/.config/nvim when NVChad init.lua is missing
  ansible.builtin.file:
    path: "{{ ansible_env.HOME }}/.config/nvim"
    state: absent
  when: not nvim_init.stat.exists

- name: Clone NVChad (if not present)
  ansible.builtin.git:
    repo: https://github.com/NvChad/NvChad
    dest: "{{ ansible_env.HOME }}/.config/nvim"
    version: v2.5
    update: yes
    force: yes
    depth: 1
  when: not nvim_git.stat.exists or not nvim_init.stat.exists

- name: Ensure NVChad custom config directory exists
  ansible.builtin.file:
    path: "{{ ansible_env.HOME }}/.config/nvim/lua/custom"
    state: directory
    mode: "0755"

- name: Deploy NVChad custom config (options.lua)
  ansible.builtin.template:
    src: init.lua.j2
    dest: "{{ ansible_env.HOME }}/.config/nvim/lua/custom/init.lua"
    mode: "0644"

- name: Deploy NVChad custom config (chadrc.lua)
  ansible.builtin.template:
    src: chadrc.lua.j2
    dest: "{{ ansible_env.HOME }}/.config/nvim/lua/custom/chadrc.lua"
    mode: "0644"

- name: Deploy NVChad custom plugins (plugins.lua)
  ansible.builtin.template:
    src: plugins.lua.j2
    dest: "{{ ansible_env.HOME }}/.config/nvim/lua/custom/plugins.lua"
    mode: "0644"

- name: Deploy NVChad custom mappings (mappings.lua)
  ansible.builtin.template:
    src: mappings.lua.j2
    dest: "{{ ansible_env.HOME }}/.config/nvim/lua/custom/mappings.lua"
    mode: "0644"

- name: Deploy NVChad custom options (options.lua)
  ansible.builtin.template:
    src: options.lua.j2
    dest: "{{ ansible_env.HOME }}/.config/nvim/lua/custom/options.lua"
    mode: "0644"

- name: Deploy NVChad custom highlights (highlights.lua)
  ansible.builtin.template:
    src: highlights.lua.j2
    dest: "{{ ansible_env.HOME }}/.config/nvim/lua/custom/highlights.lua"
    mode: "0644"

- name: Ensure after/plugin directory exists
  ansible.builtin.file:
    path: "{{ ansible_env.HOME }}/.config/nvim/after/plugin"
    state: directory
    mode: "0755"

- name: Deploy after/plugin cursorline enforcer
  ansible.builtin.template:
    src: after_cursorline.lua.j2
    dest: "{{ ansible_env.HOME }}/.config/nvim/after/plugin/cursorline.lua"
    mode: "0644"

- name: Ensure NVChad plugins are installed (Lazy sync)
  ansible.builtin.shell: |
    set -euo pipefail
    nvim --headless '+lua require("lazy").sync()' +qa
  args:
    executable: /bin/bash
  environment:
    PATH: "/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/usr/local/sbin:{{ ansible_env.PATH }}"
  changed_when: false
  failed_when: false

- name: Bootstrap lazy.nvim if missing (one-time no-op open)
  ansible.builtin.shell: |
    set -euo pipefail
    if [ ! -d "{{ ansible_env.HOME }}/.local/share/nvim/lazy/lazy.nvim" ]; then
      nvim --headless +qa || true
    fi
  args:
    executable: /bin/bash
  environment:
    PATH: "/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/usr/local/sbin:{{ ansible_env.PATH }}"
  changed_when: false
  failed_when: false

- name: Ensure Treesitter parsers are up to date
  ansible.builtin.shell: |
    set -euo pipefail
    nvim --headless '+lua require("nvim-treesitter.install").update({ with_sync = true })()' +qa
  args:
    executable: /bin/bash
  environment:
    PATH: "/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/usr/local/sbin:{{ ansible_env.PATH }}"
  changed_when: false
  failed_when: false

- name: 'Headless sanity check: open a Lua buffer to trigger highlighting'
  ansible.builtin.shell: |
    set -euo pipefail
    printf '%s\n' '-- sanity.lua' 'local x = 1' | nvim --headless '+set ft=lua' '+syntax on' '+silent write! /tmp/.nvim_sanity.lua' '+q'
  args:
    executable: /bin/bash
  environment:
    PATH: "/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/usr/local/sbin:{{ ansible_env.PATH }}"
  changed_when: false
  failed_when: false


