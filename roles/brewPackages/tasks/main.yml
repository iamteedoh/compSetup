## roles/brewPackages/tasks/main.yml

- name: Ensure 'code' CLI is available (skip if not installing VS Code extensions)
  ansible.builtin.command: which code
  register: code_cli
  failed_when: false
  changed_when: false

- name: Upgrade all Homebrew packages manually
  ansible.builtin.shell: |
    brew update || true
    brew upgrade
  register: brew_upgrade_output
  changed_when: "'Already up-to-date.' not in brew_upgrade_output.stdout"

- name: Install Homebrew packages via brew
  community.general.homebrew:
    name: "{{ item }}"
    state: present
  loop: "{{ brewPackages }}"
  when: brewPackages is defined

- name: Install Homebrew Cask packages (skip if app already exists)
  ansible.builtin.command: brew install --cask {{ item }}
  args:
    creates: "/Applications/{{ item | regex_replace('-', ' ') | title }}.app"
    executable: /bin/bash
  loop: "{{ brew_cask_packages }}"
  register: brew_cask_results
  ignore_errors: true

- name: Debug Homebrew Cask results
  debug:
    var: brew_cask_results.results

- name: Get list of installed VS Code extensions
  ansible.builtin.command: code --list-extensions
  register: vscode_installed_extensions
  changed_when: false
  failed_when: false
  when: install_vscode_extensions | default(false)

- name: Install missing VS Code extensions
  ansible.builtin.command: code --install-extension {{ item }}
  loop: "{{ vscode_extensions }}"
  loop_control:
    label: "{{ item }}"
  when:
    - install_vscode_extensions | default(false)
    - item not in vscode_installed_extensions.stdout_lines
